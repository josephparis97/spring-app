<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="4" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="1380" started-at="2021-01-06T08:21:41Z" finished-at="2021-01-06T08:21:43Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="1380" started-at="2021-01-06T08:21:41Z" finished-at="2021-01-06T08:21:43Z">
      <class name="mocked.ModificationAdresseMockTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:mocked.ModificationAdresseMockTest@1807f5a7]" name="setUp" is-config="true" duration-ms="951" started-at="2021-01-06T09:21:41Z" finished-at="2021-01-06T09:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:mocked.ModificationAdresseMockTest@1807f5a7]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="3" started-at="2021-01-06T09:21:42Z" finished-at="2021-01-06T09:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:mocked.ModificationAdresseMockTest@1807f5a7]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="125" started-at="2021-01-06T09:21:42Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2021-01-06T09:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:mocked.ModificationAdresseMockTest@1807f5a7]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="2" started-at="2021-01-06T09:21:42Z" finished-at="2021-01-06T09:21:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mocked.ModificationAdresseMockTest.la_nouvelle_adresse_de_l_abonné_est_enregistrée_sur_l_ensemble_des_contrats_de_l_abonné() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="la_nouvelle_adresse_de_l_abonné_est_enregistrée_sur_l_ensemble_des_contrats_de_l_abonné()[pri:0, instance:mocked.ModificationAdresseMockTest@1807f5a7]" name="la_nouvelle_adresse_de_l_abonné_est_enregistrée_sur_l_ensemble_des_contrats_de_l_abonné" duration-ms="184" started-at="2021-01-06T09:21:42Z" finished-at="2021-01-06T09:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- la_nouvelle_adresse_de_l_abonné_est_enregistrée_sur_l_ensemble_des_contrats_de_l_abonné -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:mocked.ModificationAdresseMockTest@1807f5a7]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2021-01-06T09:21:42Z" finished-at="2021-01-06T09:21:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mocked.ModificationAdresseMockTest.la_nouvelle_adresse_de_l_abonné_est_enregistrée_sur_l_ensemble_des_contrats_de_l_abonné() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="le_conseiller_modifie_l_adresse_de_l_abonné()[pri:0, instance:mocked.ModificationAdresseMockTest@1807f5a7]" name="le_conseiller_modifie_l_adresse_de_l_abonné" duration-ms="68" started-at="2021-01-06T09:21:42Z" finished-at="2021-01-06T09:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- le_conseiller_modifie_l_adresse_de_l_abonné -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:mocked.ModificationAdresseMockTest@1807f5a7]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2021-01-06T09:21:42Z" finished-at="2021-01-06T09:21:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mocked.ModificationAdresseMockTest.le_conseiller_modifie_l_adresse_de_l_abonné() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:mocked.ModificationAdresseMockTest@1807f5a7]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2021-01-06T09:21:42Z" finished-at="2021-01-06T09:21:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mocked.ModificationAdresseMockTest.un_abonné_avec_une_adresse_principale_en_france() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:mocked.ModificationAdresseMockTest@1807f5a7]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2021-01-06T09:21:42Z" finished-at="2021-01-06T09:21:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mocked.ModificationAdresseMockTest.le_conseiller_modifie_l_adresse_de_l_abonné() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="un_abonné_avec_une_adresse_principale_en_france()[pri:0, instance:mocked.ModificationAdresseMockTest@1807f5a7]" name="un_abonné_avec_une_adresse_principale_en_france" duration-ms="3" started-at="2021-01-06T09:21:42Z" finished-at="2021-01-06T09:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- un_abonné_avec_une_adresse_principale_en_france -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:mocked.ModificationAdresseMockTest@1807f5a7]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2021-01-06T09:21:42Z" finished-at="2021-01-06T09:21:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mocked.ModificationAdresseMockTest.un_abonné_avec_une_adresse_principale_en_france() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:mocked.ModificationAdresseMockTest@1807f5a7]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2021-01-06T09:21:42Z" finished-at="2021-01-06T09:21:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mocked.ModificationAdresseMockTest.un_mouvement_de_modification_d_adresse_est_créé_avec_la_nouvelle_adresse() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="un_mouvement_de_modification_d_adresse_est_créé_avec_la_nouvelle_adresse()[pri:0, instance:mocked.ModificationAdresseMockTest@1807f5a7]" name="un_mouvement_de_modification_d_adresse_est_créé_avec_la_nouvelle_adresse" duration-ms="29" started-at="2021-01-06T09:21:42Z" finished-at="2021-01-06T09:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- un_mouvement_de_modification_d_adresse_est_créé_avec_la_nouvelle_adresse -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:mocked.ModificationAdresseMockTest@1807f5a7]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2021-01-06T09:21:43Z" finished-at="2021-01-06T09:21:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void mocked.ModificationAdresseMockTest.un_mouvement_de_modification_d_adresse_est_créé_avec_la_nouvelle_adresse() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:mocked.ModificationAdresseMockTest@1807f5a7]" name="springTestContextAfterTestClass" is-config="true" duration-ms="1" started-at="2021-01-06T09:21:43Z" finished-at="2021-01-06T09:21:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- mocked.ModificationAdresseMockTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
